name: Deploy FastAPI to Server

on:
  push:
    branches: [ main ]
    paths:
      - 'project2/nextjs_fastapi/**'
      - '.github/workflows/deploy-fastapi.yml'
  workflow_dispatch:  # 允许手动触发

jobs:
  deploy:
    runs-on: ubuntu-latest
    # 只有设置了必要的secrets才运行
    if: ${{ secrets.SERVER_HOST != '' }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Deploy to server via SSH
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        port: ${{ secrets.SERVER_PORT || 22 }}
        script: |
          # 进入项目目录
          cd ~/apps/hughes-api || mkdir -p ~/apps/hughes-api && cd ~/apps/hughes-api
          
          # 如果有旧的repo，拉取更新；否则克隆
          if [ -d ".git" ]; then
            git pull origin main
          else
            git clone https://${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git .
          fi
          
          # 进入FastAPI目录
          cd project2/nextjs_fastapi
          
          # 创建虚拟环境（如果不存在）
          if [ ! -d "venv" ]; then
            python3 -m venv venv
          fi
          
          # 激活虚拟环境并安装依赖
          source venv/bin/activate
          pip install -r requirements.txt
          
          # 设置环境变量
          export GITHUB_TOKEN=${{ secrets.HUGHES_GITHUB_TOKEN }}
          
          # 重启服务
          sudo systemctl restart hughes-api || echo "Service restart failed, may need manual setup"
          
          echo "Deployment completed!"
    
    - name: Check service status
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        port: ${{ secrets.SERVER_PORT || 22 }}
        script: |
          sudo systemctl status hughes-api --no-pager || echo "Service not yet configured"
          curl -s http://localhost:8000/api/hughes/status || echo "API not responding yet"